webpackJsonp([25],{1901:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=l(1952),a=l.n(o),i=l(2059),n=l(3),s=n(a.a,i.a,null,null,null);t.default=s.exports},1952:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=l(1988),a=function(e){return e&&e.__esModule?e:{default:e}}(o);t.default={name:"login",data:function(){return{cityList:[{value:"beijing",label:"北京市"},{value:"shanghai",label:"上海市"},{value:"shenzhen",label:"深圳市"},{value:"hangzhou",label:"杭州市"},{value:"nanjing",label:"南京市"},{value:"chongqing",label:"重庆市"}],cityList1:[{value:"beijing",label:"北京市"},{value:"shanghai",label:"上海市"},{value:"shenzhen",label:"深圳市"}],cityList2:[{value:"hangzhou",label:"杭州市"},{value:"nanjing",label:"南京市"},{value:"chongqing",label:"重庆市"}],model:"",model1:"",model2:"",model3:"",model4:"",model5:"",model6:"",model7:"",model8:"",model9:"",model10:[],model11:"",model12:[],model13:"",loading1:!1,options1:[],model14:[],loading2:!1,options2:[],list:["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Kansas","Kentucky","Louisiana","Maine","Maryland"],columns1:[{title:"属性",key:"attr",width:130},{title:"说明",key:"content"},{title:"类型",key:"type",width:200},{title:"默认值",key:"default",width:100}],columns2:[{title:"事件名",key:"attr",width:130},{title:"说明",key:"content"},{title:"返回值",key:"default",width:100}],columns3:[{title:"方法名",key:"attr",width:130},{title:"说明",key:"content"},{title:"参数",key:"type"}],columns4:[{title:"属性",key:"attr",width:130},{title:"说明",key:"content"},{title:"类型",key:"type"},{title:"默认值",key:"default",width:100}],columns5:[{title:"属性",key:"attr",width:130},{title:"说明",key:"content"},{title:"类型",key:"type"},{title:"默认值",key:"default",width:100}],data1:[{attr:"value",content:"指定选中项目的 value 值，可以使用 v-model 双向绑定数据。单选时只接受 String 或 Number，多选时只接受 Array",type:"String | Number | Array",default:"空"},{attr:"multiple",content:"是否支持多选",type:"Boolean",default:"false"},{attr:"disabled",content:"是否禁用",type:"Boolean",default:"false"},{attr:"clearable",content:"是否可以清空选项，只在单选时有效",type:"Boolean",default:"false"},{attr:"label",content:"仅在 remote 模式下，初始化时使用。因为仅通过 value 无法得知选项的 label，需手动设置。",type:"String | Number | Array",default:"空"},{attr:"size",content:"选择框大小，可选值为large、small、default或者不填",type:"String",default:"-"},{attr:"placeholder",content:"选择框默认文字",type:"String",default:"请选择"},{attr:"not-found-text",content:"当下拉列表为空时显示的内容",type:"String",default:"无匹配数据"},{attr:"label-in-value",content:"在返回选项时，是否将 label 和 value 一并返回，默认只返回 value",type:"Boolean",default:"false"},{attr:"placement",content:"弹窗的展开方向，可选值为 bottom 和 top",type:"String",default:"bottom"},{attr:"transfer",content:"是否将弹层放置于 body 内，在 Tabs、带有 fixed 的 Table 列内使用时，建议添加此属性，它将不受父级样式影响，从而达到更好的效果",type:"Boolean",default:"false"},{attr:"element-id",content:"给表单元素设置 id，详见 Form 用法。",type:"String",default:"-"}],data2:[{attr:"on-change",content:"选中的Option变化时触发，默认返回 value，如需返回 label，详见 label-in-value 属性",type:"",default:"当前选中项"}],data3:[{attr:"clearSingleSelect",content:'清空单选项，仅在 clearable="true" 时有效',type:"",default:"无"}],data4:[{attr:"value",content:"选项值，默认根据此属性值进行筛选，必填",type:"String | Number",default:"无"},{attr:"label",content:"选项显示的内容，默认会读取 slot，无 slot 时，优先读取该 label 值，无 label 时，读取 value。当选中时，选择器会显示 label 为已选文案。大部分情况不需要配置此项，直接写入 slot 即可，在自定义选项时，该属性非常有用。",type:"String",default:"-"},{attr:"disabled",content:"是否禁用当前项",type:"Boolean",default:"false"}],data5:[{attr:"label",content:"分组的组名",type:"String",default:"空"}]}},created:function(){this.code=a.default},mounted:function(){},methods:{remoteMethod1:function(e){var t=this;""!==e?(this.loading1=!0,setTimeout(function(){t.loading1=!1;var l=t.list.map(function(e){return{value:e,label:e}});t.options1=l.filter(function(t){return t.label.toLowerCase().indexOf(e.toLowerCase())>-1})},200)):this.options1=[]},remoteMethod2:function(e){var t=this;""!==e?(this.loading2=!0,setTimeout(function(){t.loading2=!1;var l=t.list.map(function(e){return{value:e,label:e}});t.options2=l.filter(function(t){return t.label.toLowerCase().indexOf(e.toLowerCase())>-1})},200)):this.options2=[]}}}},1988:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o={};o.type={title:"基本类型",code:'\n\t\n  <e-select v-model="model1"  style="width: 200px;">\n    <e-option v-for="item in cityList" :value="item.value" :key="item.value" >{{ item.label}}</e-option>\n  </e-select>\n  \n',desc:"基本用法。可以使用 v-model 双向绑定数据。单选时，value 只接受字符串和数字类型，多选时，只接受数组类型，组件会自动根据Option的value来返回选中的数据。可以给Select添加 style 样式，比如宽度。在展开选择器后，可以使用键盘的up和down快速上下选择，按下Enter选择，按下Esc收起选择器。 "},o.size={title:"选择器尺寸 ",code:'\n<e-select v-model="model2" size="small" style="width: 100px;">\n  <e-option v-for="item in cityList" :value="item.value" :key="item.value">{{item.label}}</e-option>\n</e-select>\n<e-select v-model="model3"  style="width: 100px;">\n  <e-option v-for="item in cityList" :value="item.value" :key="item.value">{{item.label}}</e-option>\n</e-select>\n<e-select v-model="model4" size="large" style="width: 100px;">\n  <e-option v-for="item in cityList" :value="item.value" :key="item.value">{{item.label}}</e-option>\n</e-select>\n\n',desc:"通过设置size属性为large和small将输入框设置为大和小尺寸，不设置为默认（中）尺寸。"},o.disabled={title:"禁用",code:'\n<e-select v-model="model5" disabled style="width: 200px;">\n  <e-option v-for="item in cityList" :value="item.value" :key="item.value">{{item.label}}</e-option>\n</e-select>\n<e-select v-model="model6" style="width: 200px;">\n  <e-option  :value="beijing" >北京市</e-option>\n  <e-option  disabled :value="shanghai" >上海市</e-option>\n  <e-option  :value="shenzhen" >深圳市</e-option>\n</e-select>\n\n',desc:"通过给Select设置属性disabled禁用整个选择器。通过给Option设置属性disabled可以禁用当前项。"},o.clearable={title:"可清空",code:'\n<e-select v-model="model7" clearable style="width: 200px;">\n  <e-option v-for="item in cityList" :value="item.value" :key="item.value">{{item.label}}</e-option>\n</e-select>\n\n',desc:"通过设置属性clearable可以清空已选项，仅适用于单选模式。"},o.slot={title:"分组",code:'\n<e-select v-model="model8" style="width:200px">\n  <e-optionGroup label="热门城市">\n    <e-option v-for="item in cityList1" :value="item.value" :key="item.value">{{ item.label }}</e-option>\n  </e-optionGroup>\n  <e-optionGroup label="其它城市">\n    <e-option v-for="item in cityList2" :value="item.value" :key="item.value">{{ item.label }}</e-option>\n  </e-optionGroup>\n</e-select>\n\n',desc:"使用OptionGroup可将选项进行分组。"},o.custom={title:"自定义",code:'\n<e-select v-model="model9" style="width:200px">\n  <e-option value="beijing" label="北京市">\n    <e-span>北京</e-span>\n    <e-span style="float:right;color:#ccc">Beiing</e-span>\n  </e-option>\n  <e-option value="shanghai" label="上海市">\n    <e-span>上海</e-span>\n    <e-span style="float:right;color:#ccc">ShangHai</e-span>\n  </e-option>\n  <e-option value="shenzhen" label="深圳市">\n    <e-span>深圳</e-span>\n    <e-span style="float:right;color:#ccc">ShenZhen</e-span>\n  </e-option>\n</e-select>\n\n',desc:"对选项内容可以进行自定义。注意在Option中使用label属性，可以让选择器优先读取该属性的值以显示，否则选中时显示的内容会和自定义的一样，这往往不是我们想要的。对于选项显示内容的逻辑：优先显示 slot 内容，如果没有定义 slot，则显示label的值，如果没有设置 label，则显示value的值。"},o.multiselect={title:"多选",code:'\n<e-select v-model="model10" multiple style="width:260px">\n  <e-option v-for="item in cityList" :value="item.value" :key="item.value">{{ item.label }}</e-option>\n</e-select>\n\n',desc:"通过设置属性multiple可以开启多选模式。多选模式下，model 接受数组类型的数据，所返回的也是数组。"},o.search={title:"可搜索",code:'\n<e-row>\n  <e-col span="12" style="padding-right:10px">\n    <e-select v-model="model11" filterable>\n      <e-option v-for="item in cityList" :value="item.value" :key="item.value">{{ item.label }}</e-option>\n    </e-select>\n  </e-col>\n  <e-col span="12">\n    <e-select v-model="model12" filterable multiple>\n      <e-option v-for="item in cityList" :value="item.value" :key="item.value">{{ item.label }}</e-option>\n    </e-select>\n  </e-col>\n</e-row>\n\n',desc:"通过设置属性filterable可以开启搜索模式。单选和多选都支持搜索模式。多选搜索时，可以使用键盘Delete快捷删除最后一个已选项。"},o.remotesearch={title:"远程搜索",code:'\n<e-row>\n  <e-col span="12" style="padding-right:10px">\n    <e-select\n        v-model="model13"\n        filterable\n        remote\n        :remote-method="remoteMethod1"\n        :loading="loading1">\n        <e-option v-for="(option, index) in options1" :value="option.value" :key="index">{{option.label}}</e-option>\n    </e-select>\n  </e-col>\n  <e-col span="12">\n    <e-select\n        v-model="model14"\n        multiple\n        filterable\n        remote\n        :remote-method="remoteMethod2"\n        :loading="loading2">\n        <e-option v-for="(option, index) in options2" :value="option.value" :key="index">{{option.label}}</e-option>\n    </e-select>\n  </e-col>\n</e-row>\n\n',desc:"远程搜索需同时设置 filterable、remote、remote-method、loading 四个 props，其中 loading 用于控制是否正在搜索中，remote-method 是远程搜索的方法。注意：需要给 Option 设置 key。设置初始显示值，需设置 label 属性。本例为美国州名，尝试输入一些字母。"},t.default=o},2059:function(e,t,l){"use strict";var o=function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("div",{staticClass:"app-container"},[l("h1",[e._v("Select 选择器")]),e._v(" "),l("p",[e._v("使用模拟的增强下拉选择器来代替浏览器原生的选择器。选择器支持单选、多选。")]),e._v(" "),l("h3",[e._v("基本类型")]),e._v(" "),l("e-code",[l("div",{slot:"head"},[l("e-select",{staticStyle:{width:"200px"},model:{value:e.model1,callback:function(t){e.model1=t},expression:"model1"}},e._l(e.cityList,function(t){return l("e-option",{key:t.value,attrs:{value:t.value}},[e._v(e._s(t.label))])}))],1),e._v(" "),l("div",{slot:"left"},[e._v(e._s(e.code.type.code))]),e._v(" "),l("div",{slot:"right"},[e._v("\n\t\t\t\t"+e._s(e.code.type.desc)+"\n\t\t\t")])]),e._v(" "),l("h3",[e._v(e._s(e.code.size.title))]),e._v(" "),l("e-code",[l("div",{slot:"head"},[l("e-select",{staticStyle:{width:"100px"},attrs:{size:"small"},model:{value:e.model2,callback:function(t){e.model2=t},expression:"model2"}},e._l(e.cityList,function(t){return l("e-option",{key:t.value,attrs:{value:t.value}},[e._v(e._s(t.label))])})),e._v(" "),l("e-select",{staticStyle:{width:"100px"},model:{value:e.model3,callback:function(t){e.model3=t},expression:"model3"}},e._l(e.cityList,function(t){return l("e-option",{key:t.value,attrs:{value:t.value}},[e._v(e._s(t.label))])})),e._v(" "),l("e-select",{staticStyle:{width:"100px"},attrs:{size:"large"},model:{value:e.model4,callback:function(t){e.model4=t},expression:"model4"}},e._l(e.cityList,function(t){return l("e-option",{key:t.value,attrs:{value:t.value}},[e._v(e._s(t.label))])}))],1),e._v(" "),l("div",{slot:"left"},[e._v(e._s(e.code.size.code))]),e._v(" "),l("div",{slot:"right"},[e._v("\n\t\t\t\t"+e._s(e.code.size.desc)+"\n\t\t\t")])]),e._v(" "),l("h3",[e._v(e._s(e.code.disabled.title))]),e._v(" "),l("e-code",[l("div",{slot:"head"},[l("e-select",{staticStyle:{width:"200px"},attrs:{disabled:""},model:{value:e.model5,callback:function(t){e.model5=t},expression:"model5"}},e._l(e.cityList,function(t){return l("e-option",{key:t.value,attrs:{value:t.value}},[e._v(e._s(t.label))])})),e._v(" "),l("e-select",{staticStyle:{width:"200px"},model:{value:e.model6,callback:function(t){e.model6=t},expression:"model6"}},[l("e-option",{attrs:{value:"beijing"}},[e._v("北京市")]),e._v(" "),l("e-option",{attrs:{disabled:"",value:"shanghai"}},[e._v("上海市")]),e._v(" "),l("e-option",{attrs:{value:"shenzhen"}},[e._v("深圳市")])],1)],1),e._v(" "),l("div",{slot:"left"},[e._v(e._s(e.code.disabled.code))]),e._v(" "),l("div",{slot:"right"},[e._v("\n\t\t\t\t"+e._s(e.code.disabled.desc)+"\n\t\t\t")])]),e._v(" "),l("h3",[e._v(e._s(e.code.clearable.title))]),e._v(" "),l("e-code",[l("div",{slot:"head"},[l("e-select",{staticStyle:{width:"200px"},attrs:{clearable:""},model:{value:e.model7,callback:function(t){e.model7=t},expression:"model7"}},e._l(e.cityList,function(t){return l("e-option",{key:t.value,attrs:{value:t.value}},[e._v(e._s(t.label))])}))],1),e._v(" "),l("div",{slot:"left"},[e._v(e._s(e.code.clearable.code))]),e._v(" "),l("div",{slot:"right"},[e._v("\n\t\t\t\t"+e._s(e.code.clearable.desc)+"\n\t\t\t")])]),e._v(" "),l("h3",[e._v(e._s(e.code.slot.title))]),e._v(" "),l("e-code",[l("div",{slot:"head"},[l("e-select",{staticStyle:{width:"200px"},model:{value:e.model8,callback:function(t){e.model8=t},expression:"model8"}},[l("e-optionGroup",{attrs:{label:"热门城市"}},e._l(e.cityList1,function(t){return l("e-option",{key:t.value,attrs:{value:t.value}},[e._v(e._s(t.label))])})),e._v(" "),l("e-optionGroup",{attrs:{label:"其它城市"}},e._l(e.cityList2,function(t){return l("e-option",{key:t.value,attrs:{value:t.value}},[e._v(e._s(t.label))])}))],1)],1),e._v(" "),l("div",{slot:"left"},[e._v(e._s(e.code.slot.code))]),e._v(" "),l("div",{slot:"right"},[e._v("\n\t\t\t\t"+e._s(e.code.slot.desc)+"\n\t\t\t")])]),e._v(" "),l("h3",[e._v(e._s(e.code.custom.title))]),e._v(" "),l("e-code",[l("div",{slot:"head"},[l("e-select",{staticStyle:{width:"200px"},model:{value:e.model9,callback:function(t){e.model9=t},expression:"model9"}},[l("e-option",{attrs:{value:"beijing",label:"北京市"}},[l("span",[e._v("北京")]),e._v(" "),l("span",{staticStyle:{float:"right",color:"#ccc"}},[e._v("Beiing")])]),e._v(" "),l("e-option",{attrs:{value:"shanghai",label:"上海市"}},[l("span",[e._v("上海")]),e._v(" "),l("span",{staticStyle:{float:"right",color:"#ccc"}},[e._v("ShangHai")])]),e._v(" "),l("e-option",{attrs:{value:"shenzhen",label:"深圳市"}},[l("span",[e._v("深圳")]),e._v(" "),l("span",{staticStyle:{float:"right",color:"#ccc"}},[e._v("ShenZhen")])])],1)],1),e._v(" "),l("div",{slot:"left"},[e._v(e._s(e.code.custom.code))]),e._v(" "),l("div",{slot:"right"},[e._v("\n\t\t\t\t"+e._s(e.code.custom.desc)+"\n\t\t\t")])]),e._v(" "),l("h3",[e._v(e._s(e.code.multiselect.title))]),e._v(" "),l("e-code",[l("div",{slot:"head"},[l("e-select",{staticStyle:{width:"260px"},attrs:{multiple:""},model:{value:e.model10,callback:function(t){e.model10=t},expression:"model10"}},e._l(e.cityList,function(t){return l("e-option",{key:t.value,attrs:{value:t.value}},[e._v(e._s(t.label))])}))],1),e._v(" "),l("div",{slot:"left"},[e._v(e._s(e.code.multiselect.code))]),e._v(" "),l("div",{slot:"right"},[e._v("\n\t\t\t\t"+e._s(e.code.multiselect.desc)+"\n\t\t\t")])]),e._v(" "),l("div",{staticClass:"space-div24"}),e._v(" "),l("h2",[e._v("API")]),e._v(" "),l("div",{staticClass:"space-div12"}),e._v(" "),l("h2",[e._v("Select props ")]),e._v(" "),l("div",{staticClass:"space-div12"}),e._v(" "),l("e-table",{attrs:{border:"",columns:e.columns1,data:e.data1}}),e._v(" "),l("div",{staticClass:"space-div36"}),e._v(" "),l("h2",[e._v("Select events")]),e._v(" "),l("div",{staticClass:"space-div12"}),e._v(" "),l("e-table",{attrs:{border:"",columns:e.columns2,data:e.data2}}),e._v(" "),l("div",{staticClass:"space-div36"}),e._v(" "),l("h2",[e._v("Select methods")]),e._v(" "),l("div",{staticClass:"space-div12"}),e._v(" "),l("e-table",{attrs:{border:"",columns:e.columns3,data:e.data3}}),e._v(" "),l("div",{staticClass:"space-div36"}),e._v(" "),l("h2",[e._v("Option props")]),e._v(" "),l("div",{staticClass:"space-div12"}),e._v(" "),l("e-table",{attrs:{border:"",columns:e.columns4,data:e.data4}}),e._v(" "),l("div",{staticClass:"space-div36"}),e._v(" "),l("h2",[e._v("OptionGroup props")]),e._v(" "),l("div",{staticClass:"space-div12"}),e._v(" "),l("e-table",{attrs:{border:"",columns:e.columns5,data:e.data5}})],1)},a=[],i={render:o,staticRenderFns:a};t.a=i}});